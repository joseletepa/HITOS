from numpy import array, zeros, linspace, concatenate, exp
from numpy.linalg import norm
import matplotlib.pyplot as plt

# funcion el punto y la derivada
def Newton( F, x_0, Fp, tolerancia=1e-8):
    
    xn = x_0
    Error = tolerancia + 1
    while Error > tolerancia:
        
        xn1 = xn - F(xn)/Fp(xn)
        Error = abs(xn1-xn)
        print("xn=",xn,"xn1-xn=",xn1-xn)
        xn = xn1
        
    return xn

#Funcion que newton aproximar√°

def jorge( x):
    
    return exp(x)-2*x -2

def jorgep(x):
    
    
    return exp(x)-2


def particion( a, b, N):
    
    t = zeros(N+1)
     
    for i in range(0, N+1):
        
        t[i] = a + (b-a)/N * i
    
    return t



# Solucion = Newton(F=jorge, x_0=0.5, Fp=jorgep)
x = particion( a=-2., b=3., N=100)
y = jorge(x)
plt.plot(x, y)
plt.show()
# plt.plot(Solucion)
# plt.show()



